{"name":"Mongoose-ttl","body":"#Mongoose-TTL Plugin\r\n\r\nProvides time-to-live support for [Mongoose](http://mongoosejs.com).\r\n\r\n[![Build Status](https://secure.travis-ci.org/aheckmann/mongoose-ttl.png)](http://travis-ci.org/aheckmann/mongoose-ttl)\r\n\r\nOptions:\r\n\r\n  - ttl: the time each doc should live in the db (default 60 seconds)\r\n  - interval: how often the expired doc reaper runs (default 5 mins)\r\n  - reap: enable the expired doc reaper (default true)\r\n  - onReap: callback passed to reaper execution\r\n\r\nExample:\r\n\r\n```js\r\nvar schema = new Schema({..});\r\nschema.plugin(ttl, { ttl: 5000 });\r\n```\r\n\r\nThe ttl option supports the ms module by [guille](https://github.com/guille) meaning\r\nwe can specify ttls with friendlier syntax. Example:\r\n\r\n```\r\n value     milliseconds\r\n========================\r\n '2d'      172800000\r\n '1.5h'    5400000\r\n '1h'      3600000\r\n '1m'      60000\r\n '5s'      5000\r\n '500ms'   500\r\n 100       100\r\n```\r\n\r\nThe expired document reaper can be disabled by passing `reap: false`.\r\nUseful when working in multi-core environments when we only want one\r\nprocess executing it.\r\n\r\n```js\r\nvar schema = new Schema({..});\r\nschema.plugin(ttl, { ttl: 5000, reap: false });\r\nvar Cache = db.model('Cache', schema);\r\nif (isMyWorker) Cache.startTTLReaper();\r\n```\r\n\r\nThe reaper can also be stopped.\r\n\r\n```js\r\nCache.stopTTLReaper();\r\n```\r\n\r\nTime-to-live is specified at the collection level, however\r\nit can also be overridden for a given document.\r\n\r\n```js\r\nvar cache = new Cache;\r\ncache.ttl = '2m' // lives for two minutes\r\ncache.save();\r\n```\r\n\r\nWe can also reset the ttl for a given document to its\r\ndefault plugin state.\r\n\r\n```js\r\ncache.resetTTL();\r\n```\r\n## Mongoose Version\r\n`>= 2.5.2`\r\n\r\n[LICENCE](https://github.com/aheckmann/mongoose-ttl/blob/master/LICENSE)","tagline":"Provides time-to-live support for Mongoose","google":"UA-30723525-1","note":"Don't delete this file! It's used internally to help with page regeneration."}